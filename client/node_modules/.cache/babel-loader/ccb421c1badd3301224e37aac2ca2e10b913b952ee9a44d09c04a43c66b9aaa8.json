{"ast":null,"code":"var _jsxFileName = \"/Users/desislavametodieva/Documents/todo-app/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Todos from './components/Todos';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState(null);\n  useEffect(() => {\n    const getTodos = async () => {\n      const res = await axios.get('http://localhost:5001');\n      console.log(res.data);\n      setTodos(res.data);\n    };\n    getTodos();\n  }, []);\n  if (!todos) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }, this);\n  }\n\n  // the line <Todos todos={todos} /> is rendering a Todos component and passing it a prop called todos.\n\n  // The todos prop is being set to the todos state variable, which is an array of to-do items that is being fetched from the server using an HTTP GET request in the useEffect hook.\n\n  // By passing the todos array to the Todos component as a prop, the component can use this data to render a list of to-do items in the UI.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Todos, {\n      todos: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dtn9EFgiMRKD3kLN4K+GZOvuAhI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","Todos","jsxDEV","_jsxDEV","App","_s","todos","setTodos","getTodos","res","get","console","log","data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/desislavametodieva/Documents/todo-app/client/src/App.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport Todos from './components/Todos';\nimport './App.css';\n\nfunction App() {\n\nconst [todos, setTodos] = useState (null)\n\nuseEffect ( () =>  {\nconst getTodos = async () => {\n  const res = await axios.get('http://localhost:5001')\n  console.log(res.data);\n  setTodos(res.data);\n}\ngetTodos();\n}, [])\n\nif (!todos) {\n  return <div>Loading...</div>;\n}\n\n// the line <Todos todos={todos} /> is rendering a Todos component and passing it a prop called todos.\n\n// The todos prop is being set to the todos state variable, which is an array of to-do items that is being fetched from the server using an HTTP GET request in the useEffect hook.\n\n// By passing the todos array to the Todos component as a prop, the component can use this data to render a list of to-do items in the UI.\n\n  return (\n    <div className=\"App\">\n       <Todos todos={todos} /> \n    \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAAQA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAE,IAAI,CAAC;EAEzCC,SAAS,CAAG,MAAO;IACnB,MAAMS,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,uBAAuB,CAAC;MACpDC,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,IAAI,CAAC;MACrBN,QAAQ,CAACE,GAAG,CAACI,IAAI,CAAC;IACpB,CAAC;IACDL,QAAQ,EAAE;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACF,KAAK,EAAE;IACV,oBAAOH,OAAA;MAAAW,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAC9B;;EAEA;;EAEA;;EAEA;;EAEE,oBACEf,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAL,QAAA,eACjBX,OAAA,CAACF,KAAK;MAACK,KAAK,EAAEA;IAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEpB;AAEV;AAACb,EAAA,CA7BQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}